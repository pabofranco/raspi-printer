{"ast":null,"code":"var _jsxFileName = \"/home/shrubber/Code/rasp-printer/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState();\n  const handleSetFile = e => {\n    e.preventDefault();\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      setFile(files[0]);\n    }\n  };\n  const handleFormSubit = e => {\n    e.preventDefault();\n    console.log('Handling file upload: ', file === null || file === void 0 ? void 0 : file.name);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RaspPrinter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: file ? file.name : 'Select or drop a file'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleSetFile,\n          accept: \"pdf, odt, txt, csv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"r2TYF+Fv8c2PpNlLvKTx2zIPeds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","handleSetFile","e","preventDefault","files","target","length","handleFormSubit","console","log","name","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","type","id","onChange","accept","_c","$RefreshReg$"],"sources":["/home/shrubber/Code/rasp-printer/frontend/src/App.tsx"],"sourcesContent":["import { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [file, setFile] = useState<File>();\n\n\n  const handleSetFile = (e: ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      setFile(files[0]);\n    }\n  };\n\n  const handleFormSubit = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    console.log('Handling file upload: ', file?.name);\n  };\n\n  return (\n    <>\n      <h1>RaspPrinter</h1>\n      <form onSubmit={handleFormSubit}>\n        <div className=\"drop-box\">\n          <label htmlFor='fileInput'>\n            {\n              file ? file.name : 'Select or drop a file'\n            }\n          </label>\n          <input\n            type=\"file\"\n            id='fileInput'\n            onChange={handleSetFile}\n            accept='pdf, odt, txt, csv'\n          />\n        </div>\n        <button type='submit'>Print</button>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAiCA,QAAQ,QAAQ,OAAO;AACxD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAO,CAAC;EAGxC,MAAMS,aAAa,GAAIC,CAAgC,IAAK;IAC1DA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAIA,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7BN,OAAO,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMG,eAAe,GAAIL,CAA6B,IAAW;IAC/DA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,IAAI,CAAC;EACnD,CAAC;EAED,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrB,OAAA;MAAMsB,QAAQ,EAAET,eAAgB;MAAAI,QAAA,gBAC9BjB,OAAA;QAAKuB,SAAS,EAAC,UAAU;QAAAN,QAAA,gBACvBjB,OAAA;UAAOwB,OAAO,EAAC,WAAW;UAAAP,QAAA,EAEtBZ,IAAI,GAAGA,IAAI,CAACW,IAAI,GAAG;QAAuB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvC,CAAC,eACRrB,OAAA;UACEyB,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,WAAW;UACdC,QAAQ,EAAEpB,aAAc;UACxBqB,MAAM,EAAC;QAAoB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA,eACP,CAAC;AAEP;AAACjB,EAAA,CAtCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}