{"ast":null,"code":"var _jsxFileName = \"/home/shrubber/Code/rasp-printer/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState();\n  const handleSetFile = e => {\n    e.preventDefault();\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      setFile(files[0]);\n    }\n  };\n  const handleFormSubit = () => {\n    console.log('Handling form submit...');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RaspPrinter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: \"Select or drop a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          datatype: \"pdf, csv, txt, doc, docx, jpg, png\",\n          onChange: handleSetFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => handleFormSubit(),\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"r2TYF+Fv8c2PpNlLvKTx2zIPeds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","handleSetFile","e","preventDefault","files","target","length","handleFormSubit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","datatype","onChange","name","onClick","_c","$RefreshReg$"],"sources":["/home/shrubber/Code/rasp-printer/frontend/src/App.tsx"],"sourcesContent":["import { ChangeEvent, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [file, setFile] = useState<File>();\n\n\n  const handleSetFile = (e: ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      setFile(files[0]);\n    }\n  };\n\n  const handleFormSubit = (): void => {\n    console.log('Handling form submit...');\n  };\n\n  return (\n    <>\n      <h1>RaspPrinter</h1>\n      <form>\n        <div className=\"drop-box\">\n          <label htmlFor='fileInput'>Select or drop a file</label>\n          <input type=\"file\" id='fileInput' datatype='pdf, csv, txt, doc, docx, jpg, png' onChange={handleSetFile}/>\n          { file && <div>{file.name}</div> }\n        </div>\n        <button type='submit' onClick={() => handleFormSubit()}>Print</button>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAsBA,QAAQ,QAAQ,OAAO;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAO,CAAC;EAGxC,MAAMS,aAAa,GAAIC,CAAgC,IAAK;IAC1DA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAIA,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7BN,OAAO,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAY;IAClCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACxC,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAKqB,SAAS,EAAC,UAAU;QAAAL,QAAA,gBACvBhB,OAAA;UAAOsB,OAAO,EAAC,WAAW;UAAAN,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxDpB,OAAA;UAAOuB,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,WAAW;UAACC,QAAQ,EAAC,oCAAoC;UAACC,QAAQ,EAAEnB;QAAc;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EACxGf,IAAI,iBAAIL,OAAA;UAAAgB,QAAA,EAAMX,IAAI,CAACsB;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACNpB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAAC,CAAE;QAAAG,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA,eACP,CAAC;AAEP;AAAChB,EAAA,CA7BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}